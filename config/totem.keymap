#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 기본값: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 기본값: 10
#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&lt {
    flavor = "balanced";
    quick-tap-ms = <175>;
    tapping-term-ms = <280>;
    require-prior-idle-ms = <50>;
    retro-tap;
};

&mmv {
    acceleration-exponent = <2>;
    time-to-max-speed-ms = <240>;
};

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <240>;
};

/ {
    combos {
        compatible = "zmk,combos";

        // ▄▄▄▄▄▄▄▄ cb mod
        // ▄▄▄▄▄▄▄▄ cb layer
        // ▄▄▄▄▄▄▄▄ cb keys

        cb_qwe_esc {
            bindings = <&kp ESC>;
            key-positions = <0 1 2>;
        };

        cb_asd_grave {
            bindings = <&kp GRAVE>;
            key-positions = <10 11 12>;
        };

        cb_zxc_skgui {
            bindings = <&sk LGUI>;
            key-positions = <22 21 23>;
        };

        cb_wer_momouse_tomouse {
            bindings = <&td_momouse_tomouse>;
            key-positions = <1 2 3>;
            require-prior-idle-ms = <150>;
        };

        cb_sdf_tobase_lclick {
            bindings = <&td_tobase_lclick>;
            key-positions = <11 12 13>;
            require-prior-idle-ms = <150>;
        };

        cb_xcv_bt_fn_capslock {
            bindings = <&td_tobtfn_capsword_capslock>;
            key-positions = <22 23 24>;
            require-prior-idle-ms = <150>;
        };

        cb_ert_skctrl {
            bindings = <&sk LCTRL>;
            key-positions = <2 3 4>;
        };

        cb_dfg_lshift {
            bindings = <&sk LSHIFT>;
            key-positions = <14 12 13>;
        };

        cb_cvb_lalt {
            bindings = <&sk LALT>;
            key-positions = <23 25 24>;
        };

        cb_yui_minus {
            bindings = <&kp MINUS>;
            key-positions = <5 6 7>;
        };

        cb_hjk_equal {
            bindings = <&kp EQUAL>;
            key-positions = <15 17 16>;
        };

        cb_nmlt_lang1 {
            bindings = <&td_lang1_ctrlspace>;
            key-positions = <26 27 28>;
            require-prior-idle-ms = <150>;
        };

        cb_uio_np {
            bindings = <&to 6>;
            key-positions = <8 7 6>;
            require-prior-idle-ms = <150>;
        };

        cb_jkl_tobase_rclick {
            bindings = <&td_tobase_rclick>;
            key-positions = <18 16 17>;
            require-prior-idle-ms = <150>;
        };

        cb_mltgt_nav {
            bindings = <&td_tonav_lang2>;
            key-positions = <27 28 29>;
            require-prior-idle-ms = <150>;
        };

        td_iop_star {
            bindings = <&kp STAR>;
            key-positions = <7 8 9>;
        };

        cb_klsemicolon_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <17 18 19>;
        };

        cb_commaperiodslash_backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <29 30 28>;
        };
    };

    macros {
        accent: acute {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>;

            label = "ACUTE";
        };

        sql01: sql01 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sql01 &kp LS(S) &kp LS(E) &kp LS(L) &kp LS(E) &kp LS(C) &kp LS(T) &kp RET &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp STAR &kp RET &kp LS(F) &kp LS(R) &kp LS(O) &kp LS(M) &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp E &kp C &kp O &kp M &kp M &kp R &kp E &kp T &kp A &kp I &kp L &kp DOT &kp RET &kp LS(W) &kp LS(H) &kp LS(E) &kp LS(R) &kp LS(E) &kp SPACE &kp N1 &kp EQUAL &kp N1>;
            label = "SQL01";
        };

        mouse_right_3x: mouse_right_3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_X(1800)>;
            label = "MOUSE_RIGHT_3X";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mouse_left_3x: mouse_left_3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_X(-1800)>;
            label = "MOUSE_LEFT_3x";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mouse_up_3x: mouse_up_3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_Y(-1800)>;
            label = "MOUSE_UP_3x";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mouse_down_3x: mouse_down_3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_Y(1800)>;
            label = "MOUSE_DOWN_3x";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mouse_right_6x: mouse_roght_6x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_X(3600)>;
            label = "MOUSE_ROGHT_6x";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mouse_left_6x: mouse_left_6x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_X(-3600)>;
            label = "MOUSE_LEFT_6x";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mouse_up_6x: mouse_up_6x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_Y(-3600)>;
            label = "MOUSE_UP_6x";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mouse_down_6x: mouse_down_6x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_Y(3600)>;
            label = "MOUSE_DOWN_6x";
            wait-ms = <30>;
            tap-ms = <150>;
        };

        mc_mmv_right3x: mc_mmv_right3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_RIGHT &mmv MOVE_RIGHT &mmv MOVE_RIGHT &mmv MOVE_RIGHT &mmv MOVE_RIGHT>;
            label = "MC_MMV_RIGHT3X";
        };

        mc_mmv_left3x: mc_mmv_left3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_LEFT &mmv MOVE_LEFT &mmv MOVE_LEFT &mmv MOVE_LEFT &mmv MOVE_LEFT>;
            label = "MC_MMV_LEFT3X";
        };

        mc_mmv_up3x: mc_mmv_up3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_UP &mmv MOVE_UP &mmv MOVE_UP &mmv MOVE_UP &mmv MOVE_UP>;
            label = "MC_MMV_UP3X";
        };

        mc_mmv_down3x: mc_mmv_down3x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_DOWN &mmv MOVE_DOWN &mmv MOVE_DOWN &mmv MOVE_DOWN &mmv MOVE_DOWN>;
            label = "MC_MMV_DOWN3X";
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
            require-prior-idle-ms = <50>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
            require-prior-idle-ms = <50>;
        };

        thl: thl {
            compatible = "zmk,behavior-hold-tap";
            label = "THL";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 15 26 7 8 9 17 18 19 28 29 30 31 16 27 6 35 36 37>;
            hold-trigger-on-release;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
        };

        thr: thr {
            compatible = "zmk,behavior-hold-tap";
            label = "THR";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-on-release;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
        };

        td_bracket: td_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKET";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            tapping-term-ms = <220>;
        };

        td_esc_capsword: td_esc_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESC_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        td_parenthesis: td_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            tapping-term-ms = <220>;
        };

        mo_to: mo_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        td_quote_backslashpipe: td_quote_backslashpipe {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTE_BACKSLASHPIPE";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp BACKSLASH>;

            tapping-term-ms = <200>;
        };

        td_quote_underscore: td_quote_underscore {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTE_UNDERSCORE";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp UNDER>;

            tapping-term-ms = <200>;
        };

        td_left_bracket_parenthesis: td_left_bracket_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LEFT_BRACKET_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp LEFT_PARENTHESIS>;

            tapping-term-ms = <220>;
        };

        td_right_bracket_parenthesis: td_right_bracket_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RIGHT_BRACKET_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_PARENTHESIS>;

            tapping-term-ms = <220>;
        };

        td_f: td_f {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_F";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp LCTRL>, <&kp F>;

            tapping-term-ms = <200>;
        };

        td_d: td_d {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_D";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp LSHIFT>, <&kp D>;

            tapping-term-ms = <200>;
        };

        td_s: td_s {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_S";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LALT>, <&kp S>;

            tapping-term-ms = <200>;
        };

        td_a: td_a {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_A";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp LGUI>, <&kp A>;

            tapping-term-ms = <200>;
        };

        td_j: td_j {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_J";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp LCTRL>, <&kp J>;

            tapping-term-ms = <200>;
        };

        td_k: td_k {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_K";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp LSHIFT>, <&kp K>;

            tapping-term-ms = <200>;
        };

        td_l: td_l {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_L";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp LALT>, <&kp L>;

            tapping-term-ms = <200>;
        };

        td_semicolon: td_semicolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp LGUI>, <&kp SEMICOLON>;

            tapping-term-ms = <200>;
        };

        td_tab_l_ctrl_r_nav_bracket_ins: td_tab_l_ctrl_r_nav_bracket_ins {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TAB_L_CTRL_R_NAV_BRACKET_INS";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&lt 4 TAB>;

            tapping-term-ms = <200>;
        };

        td_und_l_thumb_r_mmoderate: td_und_l_thumb_r_mmoderate {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_UND_L_THUMB_R_MMODERATE";
            #binding-cells = <0>;
            bindings = <&kp UNDERSCORE>, <&lt 1 UNDERSCORE>;

            tapping-term-ms = <200>;
        };

        td_graveaccent_l_pinky_np: td_graveaccent_l_pinky_np {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_GRAVEACCENT_L_PINKY_NP";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&lt 6 GRAVE>;

            tapping-term-ms = <200>;
        };

        td_bspc_bt_fn: td_bspc_bt_fn {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BSPC_BT_FN";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&lt 5 BSPC>;

            tapping-term-ms = <200>;
        };

        hold_mkp: hold_mkp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_MKP";
            bindings = <&kp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            retro-tap;
        };

        td_home_end: td_home_end {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_HOME_END";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp END>;

            tapping-term-ms = <200>;
        };

        td_lt_gt: td_lt_gt {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LT_GT";
            #binding-cells = <0>;
            bindings = <&kp LT>, <&kp GT>;

            tapping-term-ms = <220>;
        };

        td_kor_eng_chn: td_kor_eng_chn {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_KOR_ENG_CHN";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1>, <&kp LANGUAGE_2>;

            tapping-term-ms = <220>;
        };

        td_lang1_ctrlspace: td_lang1_ctrlspace {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LANG1_CTRLSPACE";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1>, <&kp LC(SPACE)>;

            tapping-term-ms = <220>;
        };

        td_mmoderate_esc: td_mmoderate_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MMODERATE_ESC";
            #binding-cells = <0>;
            bindings = <&tog 1>, <&kp ESC>;

            tapping-term-ms = <220>;
        };

        td_tobase_capsword: td_tobase_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TOBASE_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&to 0>, <&caps_word>;

            tapping-term-ms = <220>;
        };

        td_tobtfn_capsword_capslock: td_tobtfn_capsword_capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TOBTFN_CAPSWORD_CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&tog 5>, <&caps_word>, <&kp CAPS>;

            tapping-term-ms = <220>;
        };

        td_momouse_tomouse: td_momouse_tomouse {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MOMOUSE_TOMOUSE";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;

            tapping-term-ms = <220>;
        };

        td_tobase_lclick: td_tobase_lclick {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TOBASE_LCLICK";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mkp LCLK>;

            tapping-term-ms = <220>;
        };

        td_tobase_rclick: td_tobase_rclick {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TOBASE_RCLICK";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mkp RCLK>;

            tapping-term-ms = <220>;
        };

        td_tonav_lang2: td_tonav_lang2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TONAV_LANG2";
            #binding-cells = <0>;
            bindings = <&to 4>, <&kp LANG2>;

            tapping-term-ms = <220>;
        };

        td_tonp_scrllock: td_tonp_scrllock {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TONP_SCRLLOCK";
            #binding-cells = <0>;
            bindings = <&to 6>, <&kp SCROLLLOCK>;

            tapping-term-ms = <220>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "BASE";
            bindings = <
       &kp Q  &kp W  &kp E        &kp R      &kp T          &kp Y      &kp U       &kp I         &kp O    &kp P
       &kp A  &kp S  &kp D        &kp F      &kp G          &kp H      &kp J       &kp K         &kp L    &kp SEMI
&none  &kp Z  &kp X  &kp C        &kp V      &kp B          &kp N      &kp M       &kp COMMA     &kp DOT  &kp FSLH  &none
                     &lt 6 UNDER  &lt 7 TAB  &lt 4 SPACE    &kp ENTER  &lt 8 BSPC  &lt 5 DELETE
            >;
        };

        und_r_mmoderate {
            bindings = <
       &msc MOVE_X(-20)  &none     &none        &none      &msc MOVE_X(20)     &msc MOVE_Y(20)   &msc MOVE_X(-20)  &mmv MOVE_UP    &msc MOVE_X(20)  &none
       &kp LGUI          &kp LALT  &kp LSHIFT   &kp LCTRL  &msc MOVE_Y(20)     &msc MOVE_Y(-20)  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
&none  &none             &none     &none        &none      &msc MOVE_Y(-20)    &mc_mmv_left3x    &mc_mmv_right3x   &mc_mmv_up3x    &mc_mmv_down3x   &none  &none
                                   &lt 6 UNDER  &lt 7 TAB  &lt 4 SPACE         &kp RET           &lt 8 BSPC        &lt 5 DEL
            >;
        };

        und_c_r_mslow {
            bindings = <
       &none     &none     &none        &none      &none          &msc MOVE_Y(10)   &msc MOVE_X(-10)  &mmv MOVE_UP    &msc MOVE_X(10)  &none
       &kp LGUI  &kp LALT  &kp LSHIFT   &kp LCTRL  &none          &msc MOVE_Y(-10)  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
&none  &none     &none     &none        &none      &none          &none             &none             &none           &none            &none  &none
                           &lt 6 UNDER  &lt 7 TAB  &lt 4 SPACE    &kp RET           &lt 8 BSPC        &lt 5 DEL
            >;
        };

        und_e_r_mfast {
            bindings = <
       &none     &none     &none        &none      &none          &msc MOVE_Y(20)   &msc MOVE_X(-20)  &mc_mmv_up3x    &msc MOVE_X(20)  &none
       &kp LGUI  &kp LALT  &kp LSHIFT   &kp LCTRL  &none          &msc MOVE_Y(-20)  &mc_mmv_left3x    &mc_mmv_down3x  &mc_mmv_right3x  &none
&none  &none     &none     &none        &none      &none          &none             &none             &none           &none            &none  &none
                           &lt 6 UNDER  &lt 7 TAB  &lt 4 SPACE    &kp RET           &lt 8 BSPC        &lt 5 DEL
            >;
        };

        tab_r_nav {
            bindings = <
       &kp LC(Q)  &kp LC(W)  &kp LC(E)    &kp LC(R)  &kp LC(T)    &kp PG_UP  &kp HOME    &kp UP_ARROW  &kp END         &none
       &kp LGUI   &kp LALT   &kp LSHIFT   &kp LCTRL  &kp LC(G)    &kp PG_DN  &kp LEFT    &kp DOWN      &kp RIGHT       &none
&none  &kp LC(Z)  &kp LC(X)  &kp LC(C)    &kp LC(V)  &kp LC(B)    &kp LC(N)  &kp LC(M)   &kp INS       &kp SCROLLLOCK  &kp PRINTSCREEN  &none
                             &lt 6 UNDER  &lt 7 TAB  &none        &kp ENTER  &lt 8 BSPC  &lt 5 DEL
            >;
        };

        del_bt_fn {
            bindings = <
            &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &kp C_VOL_UP  &kp F7      &kp F8  &kp F9  &kp F10
            &kp LGUI      &kp LALT      &kp LSHIFT    &kp LCTRL     &kp C_BRI_UP    &kp C_MUTE    &kp F4      &kp F5  &kp F6  &kp F11
&bt BT_CLR  &none         &none         &none         &none         &kp C_BRI_DN    &kp C_VOL_DN  &kp F1      &kp F2  &kp F3  &kp F12  &none
                                        &lt 6 UNDER   &lt 7 TAB     &lt 4 SPACE     &kp ENTER     &lt 8 BSPC  &none
            >;
        };

        r_np {
            bindings = <
       &none     &none     &none       &none      &kp LEFT_PARENTHESIS    &kp MINUS  &kp N7      &kp N8     &kp N9  &kp N0
       &kp LGUI  &kp LALT  &kp LSHIFT  &kp LCTRL  &kp LEFT_BRACKET        &kp EQUAL  &kp N4      &kp N5     &kp N6  &kp STAR
&none  &none     &none     &none       &none      &kp LT                  &kp PLUS   &kp N1      &kp N2     &kp N3  &kp SLASH  &none
                           &none       &lt 7 TAB  &lt 4 SPACE             &kp ENTER  &lt 8 BSPC  &lt 5 DEL
            >;
        };

        l_homerow_r_base {
            label = "r_BASE";
            bindings = <
       &none     &none     &none        &none      &kp RIGHT_PARENTHESIS    &kp Y      &kp U       &kp I      &kp O    &kp P
       &kp LGUI  &kp LALT  &kp LSHIFT   &kp LCTRL  &kp RIGHT_BRACKET        &kp H      &kp J       &kp K      &kp L    &kp SEMI
&none  &none     &none     &none        &none      &kp GT                   &kp N      &kp M       &kp COMMA  &kp DOT  &kp FSLH  &none
                           &lt 6 UNDER  &none      &lt 4 SPACE              &kp ENTER  &lt 8 BSPC  &lt 5 DEL
            >;
        };

        r_homerow_l_base {
            label = "l_BASE";
            bindings = <
       &kp Q  &kp W  &kp E        &kp R      &kp T          &kp PG_UP  &kp HOME   &mkp LCLK   &kp END   &mkp RCLK
       &kp A  &kp S  &kp D        &kp F      &kp G          &kp PG_DN  &kp LCTRL  &kp LSHIFT  &kp LALT  &kp LGUI
&none  &kp Z  &kp X  &kp C        &kp V      &kp B          &none      &none      &none       &none     &none      &none
                     &lt 6 UNDER  &lt 7 TAB  &lt 4 SPACE    &kp ENTER  &none      &lt 5 DEL
            >;
        };
    };
};
